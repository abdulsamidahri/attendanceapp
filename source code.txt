
<!DOCTYPE html><html lang="en" data-theme="dark"><head><!--remix-island-start--><meta charSet="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><meta property="og:type" content="object"/><meta property="og:site_name" content="bolt.new"/><meta property="og:title" content="School Management System with Student Management"/><meta property="og:image" content="https://social-img.staticblitz.com/bolt-projects/sb1-8wsi3euu"/><meta name="twitter:card" content="summary_large_image"/><meta name="twitter:title" content="School Management System with Student Management"/><meta name="twitter:description" content="Starter project for Node.js, a JavaScript runtime built on Chrome&#x27;s V8 JavaScript engine."/><meta name="twitter:image" content="https://social-img.staticblitz.com/bolt-projects/sb1-8wsi3euu"/><meta name="twitter:site" content="@StackBlitz"/><meta name="bolt-version" content="13c4850"/><link rel="stylesheet" href="/assets/root-DUlEJm2i.css"/><link rel="stylesheet" href="/assets/LightRays-apN2LHcc.css"/><link rel="icon" href="/static/favicon.svg" type="image/svg+xml"/><link rel="stylesheet" href="/assets/ReactToastify-Bh76j7cs.css"/><link rel="stylesheet" href="/assets/tailwind-compat-Bwh-BmjE.css"/><link rel="stylesheet" href="/assets/index-D-9DZ-7M.css"/><link rel="stylesheet" href="/assets/xterm-LZoznX6r.css"/><link rel="preconnect" href="https://fonts.googleapis.com"/><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous"/><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap"/><link rel="stylesheet" href="/assets/_index-BX_twXnp.css"/><script>(function createWorkaroundGlobal() {
  window["__name"] = () => {
  };
})();</script><script>(function blockDOMMutations() {
  const observer = new MutationObserver((mutations) => {
    observer.disconnect();
    mutations.reverse().forEach((mutation) => {
      if (mutation.type === "childList") {
        mutation.addedNodes.forEach((node2) => {
          if ([document.head, document.body, document.documentElement].includes(node2.parentNode)) {
            return;
          }
          if (node2.parentNode) {
            node2.parentNode.removeChild(node2);
          }
        });
        mutation.removedNodes.forEach((node2) => {
          if (mutation.previousSibling) {
            mutation.target.insertBefore(node2, mutation.previousSibling.nextSibling);
          } else if (mutation.target) {
            mutation.target.appendChild(node2);
          }
        });
      }
      if (mutation.type === "attributes") {
        const { target, attributeName, oldValue } = mutation;
        if (attributeName) {
          if (oldValue === null) {
            target.removeAttribute(attributeName);
          } else {
            target.setAttribute(attributeName, oldValue);
          }
        }
      }
      if (mutation.type === "characterData") {
        mutation.target.data = mutation.oldValue ?? "";
      }
    });
    observe();
  });
  function observe() {
    observer.observe(document, {
      subtree: true,
      childList: true,
      attributes: true,
      attributeOldValue: true,
      characterData: true,
      characterDataOldValue: true
    });
  }
  __name(observe, "observe");
  window.addEventListener("DOMContentLoaded", observe);
  window.__allowDOMMutations = () => {
    observer.disconnect();
  };
})();</script><script>(function themeCode(storageKey, defaultTheme) {
  if (window.location.pathname !== "/figma") {
    setBoltTheme();
  }
  function setBoltTheme() {
    const htmlElement = document.querySelector("html");
    const localTheme = localStorage.getItem(storageKey);
    const metaElement = document.querySelector("meta[name=bolt-theme]");
    let theme = metaElement?.content ?? localTheme ?? defaultTheme;
    htmlElement.setAttribute("data-theme-option", theme);
    if (theme === "system") {
      const prefersDark2 = window.matchMedia("(prefers-color-scheme: dark)").matches;
      theme = prefersDark2 ? "dark" : "light";
    }
    htmlElement.setAttribute("data-theme", theme);
  }
  __name(setBoltTheme, "setBoltTheme");
})("bolt_theme", "dark");</script><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-58KJM59B');</script><script id="sentry-initial-user-data" type="application/json">{"id":"5981082","username":"sameedahri","email":"sameedahri@gmail.com"}</script><script>(function sentryLoader(environment, userElementId) {
  window.sentryOnLoad = () => {
    Sentry.init({
      release: "13c485062dfbc7966d2edf7b03dd8ae3b94af1e1",
      // https://docs.sentry.io/platforms/javascript/session-replay/
      replaysSessionSampleRate: 0.01,
      replaysOnErrorSampleRate: 1,
      tracesSampleRate: 0.01,
      environment
    });
    const userSource = document.getElementById(userElementId)?.textContent;
    if (!userSource) {
      return;
    }
    Sentry.setUser(JSON.parse(userSource ?? "null"));
  };
})("production", "sentry-initial-user-data");</script><script src="https://js.sentry-cdn.com/a2f02ffb9d5f16260f262b40e72c0efe.min.js" crossorigin="anonymous"></script><!--remix-island-end--></head><body class="bg-bolt-elements-background-depth-1"><div id="root" class="w-full h-full"><div class="flex flex-col h-full w-full"><header class="flex shrink-0 select-none selection-accent items-center bg-bolt-elements-background-depth-1 pl-5 pr-4 border-b h-[var(--header-height)] border-transparent"><div class="flex grow-1 basis-60 items-center gap-2 z-logo text-bolt-elements-textPrimary"><a href="/" class="text-2xl font-semibold text-accent flex items-center"><span class="i-bolt:logos-bolt?mask w-[46px] inline-block"></span></a></div><div class="flex grow-1 basis-60 justify-end items-center gap-3"></div></header></div><script>((STORAGE_KEY2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key2 = Math.random().toString(32).slice(2);
      window.history.replaceState({
        key: key2
      }, "");
    }
    try {
      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}");
      let storedY = positions[restoreKey || window.history.state.key];
      if (typeof storedY === "number") {
        window.scrollTo(0, storedY);
      }
    } catch (error3) {
      console.error(error3);
      sessionStorage.removeItem(STORAGE_KEY2);
    }
  })("positions", null)</script><link rel="modulepreload" href="/assets/manifest-e02b3c58.js"/><link rel="modulepreload" href="/assets/entry.client-BtvKUSuT.js"/><link rel="modulepreload" href="/assets/components-DjmRHHvk.js"/><link rel="modulepreload" href="/assets/appsignal.client--JqSSHZF.js"/><link rel="modulepreload" href="/assets/constants-B-kyzAj0.js"/><link rel="modulepreload" href="/assets/LightRays.client-D_iF8Mty.js"/><link rel="modulepreload" href="/assets/projects-Czy8dX0j.js"/><link rel="modulepreload" href="/assets/Alert-DnIm0tfv.js"/><link rel="modulepreload" href="/assets/Button-5hm1Efp9.js"/><link rel="modulepreload" href="/assets/tslib.es6-ChmJQI-w.js"/><link rel="modulepreload" href="/assets/login-B83pmrYo.js"/><link rel="modulepreload" href="/assets/LoadingDots-1KXM5ZIF.js"/><link rel="modulepreload" href="/assets/token-BilJNiSq.js"/><link rel="modulepreload" href="/assets/description-Dh29MzTO.js"/><link rel="modulepreload" href="/assets/LightRays.module-ob5nzZIi.js"/><link rel="modulepreload" href="/assets/applicationManager-BsRds42Y.js"/><link rel="modulepreload" href="/assets/github-DLyIYyC9.js"/><link rel="modulepreload" href="/assets/LegacyDialog-CajcwpRk.js"/><link rel="modulepreload" href="/assets/useProjectVisibility-O-jMZSdQ.js"/><link rel="modulepreload" href="/assets/root-BguyvQbc.js"/><link rel="modulepreload" href="/assets/_index-D5ssrSRY.js"/><link rel="modulepreload" href="/assets/animationVariants-CZlYx2ae.js"/><link rel="modulepreload" href="/assets/stripe-tW-MWGv0.js"/><link rel="modulepreload" href="/assets/overlay-CIiqNQHT.js"/><link rel="modulepreload" href="/assets/Input-BC77bmXO.js"/><link rel="modulepreload" href="/assets/client-error-DxJjkGdD.js"/><link rel="modulepreload" href="/assets/ConnectToFigmaDialog-DqS-FVhn.js"/><link rel="modulepreload" href="/assets/index-BbP3371Q.js"/><link rel="modulepreload" href="/assets/client-github-nVFp1cOQ.js"/><link rel="modulepreload" href="/assets/prepare-body-258sranA.js"/><link rel="modulepreload" href="/assets/~._slug-CM6eSBcV.js"/><script>window.__remixContext = {"basename":"/","future":{"v3_fetcherPersist":true,"v3_relativeSplatPath":true,"v3_throwAbortReason":true,"v3_singleFetch":false,"v3_lazyRouteDiscovery":false,"unstable_optimizeDeps":false},"isSpaMode":false,"state":{"loaderData":{"root":{"user":{"avatar":"https://avatars.githubusercontent.com/u/57359329","bio":null,"canSubscribe":true,"createdAt":"2025-07-08T10:02:25.521Z","email":"sameedahri@gmail.com","expirableBoltTokenPurchases":[],"externalAccount":{"username":"abdulsamidahri","url":"https://github.com//abdulsamidahri"},"externalAccounts":[{"provider":"github","username":"abdulsamidahri","uri":"https://github.com//abdulsamidahri"},{"provider":"google","username":null,"uri":null}],"featureFlags":{"experimentalNode":false,"previewTunneling":false,"hackathon":false,"privateRegistries":false,"teamOnboarding":false,"userSurvey":true,"newPricingCards":false,"refreshSubscriptionData":false},"kind":"USER","location":null,"membership":null,"membershipLevel":0,"name":"sameedahri@gmail.com","nextMembershipLevel":0,"onboardingSurveyResponse":{"status":"finished","surveyVersion":null},"roles":[],"site":null,"teamsPlan":false,"tokenAllocations":[],"totalBoltTokenPurchases":1000000,"username":"sameedahri","wcAPIMembership":null,"wcAPIStripeAccount":null,"id":"5981082","organizations":[],"organizationInvites":[],"activeOrganizationId":null,"surveys":{"onboarding":"finished"}}},"routes/~.$slug":{"user":{"avatar":"https://avatars.githubusercontent.com/u/57359329","bio":null,"canSubscribe":true,"createdAt":"2025-07-08T10:02:25.521Z","email":"sameedahri@gmail.com","expirableBoltTokenPurchases":[],"externalAccount":{"username":"abdulsamidahri","url":"https://github.com//abdulsamidahri"},"externalAccounts":[{"provider":"github","username":"abdulsamidahri","uri":"https://github.com//abdulsamidahri"},{"provider":"google","username":null,"uri":null}],"featureFlags":{"experimentalNode":false,"previewTunneling":false,"hackathon":false,"privateRegistries":false,"teamOnboarding":false,"userSurvey":true,"newPricingCards":false,"refreshSubscriptionData":false},"kind":"USER","location":null,"membership":null,"membershipLevel":0,"name":"sameedahri@gmail.com","nextMembershipLevel":0,"onboardingSurveyResponse":{"status":"finished","surveyVersion":null},"roles":[],"site":null,"teamsPlan":false,"tokenAllocations":[],"totalBoltTokenPurchases":1000000,"username":"sameedahri","wcAPIMembership":null,"wcAPIStripeAccount":null,"id":"5981082","organizations":[],"organizationInvites":[],"activeOrganizationId":null,"surveys":{"onboarding":"finished"},"settings":{"featurePreviews":{"reasoning":false}}},"github":{"linked":true,"data":{"repository":{"owner":"abdulsamidahri","name":"microbiology-LMS","id":"R_kgDOPI-wFA"},"branchName":"main","initialized":true,"type":"github"}},"slug":"sb1-8wsi3euu","projectId":"51922615","projectInfo":{"description":"Starter project for Node.js, a JavaScript runtime built on Chrome's V8 JavaScript engine.","id":"51922615","slug":"sb1-8wsi3euu","title":"School Management System with Student Management"},"tokenStats":{"billingPeriod":null,"maxPerDay":500000,"maxPerMonth":3000000,"regularTokens":{"available":3000000,"used":500000},"nextTier":{"level":1,"limits":{"perDay":10000000,"perMonth":10000000},"type":"pro"},"overflow":{"available":1000000,"used":65064},"purchased":{"available":1000000,"used":65064},"totalThisMonth":500000,"totalToday":500000,"referralTokens":{"free":{"available":0,"rewardCount":0,"used":0},"paid":{"available":0,"rewardCount":0,"used":0}},"specialTokens":{"available":0,"used":0}},"loggedIn":true}},"actionData":null,"errors":null}};</script><script type="module" async="">import "/assets/manifest-e02b3c58.js";
import * as route0 from "/assets/root-BguyvQbc.js";
import * as route1 from "/assets/~._slug-CM6eSBcV.js";

window.__remixRouteModules = {"root":route0,"routes/~.$slug":route1};

import("/assets/entry.client-BtvKUSuT.js");</script></div></body></html>